#!/bin/bash
# Author: Luka Ruzic

usage() {
    {
	echo " Usage: $0 [options]"
	echo " Description:  use to monitor a Sun Grid Engine (originally based on dreamon, CU Boulder)"
	echo " Options:"
	echo "      -m [<s>]     start up active monitor with <s> refresh (DEFAULT: 0.5s)"
	echo "      -up          uptime for the cluster"
	echo "      -u           number of jobs (running and total) by user"
	echo "      -l [user]    list of jobs with jobID, user, job name, slots, and status"
	echo "      -lr [user]   list of running jobs with jobID, user, job name, slots, and status"
	echo "      -j [user]    print job IDs of running jobs"
	echo "      -jr [user]   print job IDs of all jobs"
	#echo "      -f [user]    print list of FEAT jobs, who is running them, and their jobIDs"
	echo
	echo " Notes:  options work with or without -'s (ex: sgemon m)"
    } >&2

    exit ${1:-1}
}

if [ $# -lt 1 ]; then
    echo "INSUFFICIENT ARGUMENTS" >&2
    usage
fi

if [[ "$*" =~ -help$ ]]; then
    usage 0
fi


if [ ${1#-} == "m" ]; then
    watch --interval=${2:-.5} "sgemon up; echo; sgemon u; echo ; echo TO EXIT: ctrl c"

elif [ ${1#-} == "u" ]||[ ${1#-} == "w" ]; then
    [ $2 ] && user=$2
    echo "SLOTS RUN  (WAIT)  USER"
    for u in `qstat -u '*' | awk 'NR>2 {print $4}' | sort -n | uniq`; do 
	echo `qstat -u $u | awk 'NR>2 {if ($5=="r") r+=$9; else s+=$8} END {print r*1" ("s*1")"}'` $u | awk '{printf ("      %3d  %5s   %s\n",$1,$2,$3)}'
    done | sort -n -k1 -r
    #qstat -u "${user:-*}" | awk 'NR>2 {print $4; if (match($8,"q@node")) for(i=1;i<$9;i++) print $4; else for(i=1;i<$8;i++) print $4}' | sort -n | uniq -c
    shift

elif [ ${1#-} == "wr" ]; then
    [ $2 ] && user=$2
    echo "  SLOTS USER"
    qstat -u "${user:-*}" | awk 'NR>2 && $5=="r" {print $4; for(i=1;i<$9;i++) print $4}' | sort -n | uniq -c
    shift

elif [ ${1#-} == "l" ]; then
    [ $2 ] && user=$2
    printf "%10s %10s %12s   %s(%s) \n" JOBID USER JOB_NAME SLOTS STATUS
    while read job status u slots; do
	printf "%10s %10s %15s %3s (%s) \n" $job $u `qstat -j $job | grep job_name | awk '{print $2}'` $slots $status
    done < <(qstat -u "${user:-*}" | awk 'NR>2 {print $1,$5,$4,$9*1}')
    shift

elif [ ${1#-} == "lr" ]; then
    [ $2 ] && user=$2
    printf "%10s %10s 0%12s   %s(%s) \n" JOBID USER JOB_NAME SLOTS STATUS
    while read job status u slots; do
	printf "%10s %10s %15s %3s (%s) \n" $job $u `qstat -j $job | grep job_name | awk '{print $2}'` $slots $status
    done < <(qstat -u "${user:-*}" | awk 'NR>2 && $5=="r" {print $1,$5,$4,$9*1}')
    shift

elif [ ${1#-} == "up" ]; then    
    qstat -g c
    shift

elif [ ${1#-} == "j" ]||[ ${1#-} == "jlist" ]; then
    [ $2 ] && user="$2"
    qstat -u "${user:-*}" | awk 'NR>2 && $3!="QRLOGIN" {print $1}'

elif [ ${1#-} == "jr" ]||[ ${1#-} == "jrlist" ]; then
    [ $2 ] && user="$2"
    qstat -u "${user:-*}" | awk 'NR>2 && $5=="r" {print $1}'

#elif [ ${1#-} == "feat" ]; then
#    [ $2 ] && user="$2"
#    echo "     JOBID STATUS   USER     JOB"
#    while read j u s; do
#	printf "%10s   %4s %10s %s\n" $j $s $u `qstat -j $j | awk '/job_args:/ {print $2}' | tr , '\n' | grep '\.fsf'`
#    done < <(qstat -u "${user:-*}" | awk 'NR>2 {print $1,$4,$5}') | grep '\.fsf' | sed 's|/design.fsf||' | sort -n | uniq

#elif [ ${1#-} == "featr" ]; then
#    [ $2 ] && user="$2"
#    while read j p u s; do
#	printf "%-12s %s   %s\n" $u `qstat -j $j | awk '/job_args:/ {print $2}' | tr , '\n' | grep '\.fsf'` $p
#    done < <(qstat -u "${user:-*}" | awk 'NR>2 && $5=="r" {print $1,$3,$4}') | grep '\.fsf' | awk '$1 ~ /'${user:-.}'/' | sort -n | uniq

elif [ ${1#-} == "feat" ]||[ ${1#-} == "f" ]; then
    echo "WARNING: only works correctly if FSL is configured to self-submit jobs to SGE"
    echo "         (not expected to work on hugin)"

    [ $2 ] && user="$2"
    # find all feat5_stop jobs
    for j in `qstat -u "${user:-*}" | awk '/feat5_stop/ {print $1}'`; do
	[ `qstat -j $j | grep -cE 'sge_o_workdir:.*\.gfeat/'` -eq 0 ] && stop_jobs+=($j)
    done

    for a in ${stop_jobs[*]}; do
	let t++
	[ $t -gt 1 ] && echo
	echo "USER: "$(qstat -j $a 2> /dev/null | awk '/owner:/ {print $2}')
	echo "OUTPUT DIRECTORY: "$(qstat -j $a 2> /dev/null | awk '/sge_o_workdir/ {print $2}')
	echo -n "JOB NUMBERS: "
        # recurse through predecessor jobs to find all associated job numbers
	jlist=$a
	while [ "$jlist" ]; do
	    unset new_jlist
	    for j in $jlist; do
		echo $j
		new_jlist+=" `qstat -j $j 2> /dev/null | grep predecessor_list | awk '{print $NF}' | sed 's|featModelID||' | tr , ' '`"
	    done 
	    jlist=$new_jlist
	done  | sort -n -k3 | uniq | tr '\n' , | sed 's|,$||'
	echo
    done

else
    echo "UNRECOGNIZED OPTION: $1" >&2
    usage
fi

exit 0
